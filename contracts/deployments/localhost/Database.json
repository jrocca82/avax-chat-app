{
  "address": "0x5FbDB2315678afecb367f032d93F642f64180aa3",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "friend_key",
          "type": "address"
        },
        {
          "internalType": "string",
          "name": "name",
          "type": "string"
        }
      ],
      "name": "addFriend",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "pubkey",
          "type": "address"
        }
      ],
      "name": "checkUserExists",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "name",
          "type": "string"
        }
      ],
      "name": "createAccount",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getMyFriendList",
      "outputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "pubkey",
              "type": "address"
            },
            {
              "internalType": "string",
              "name": "name",
              "type": "string"
            }
          ],
          "internalType": "struct Database.friend[]",
          "name": "",
          "type": "tuple[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "pubkey",
          "type": "address"
        }
      ],
      "name": "getUsername",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "friend_key",
          "type": "address"
        }
      ],
      "name": "readMessage",
      "outputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "sender",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "timestamp",
              "type": "uint256"
            },
            {
              "internalType": "string",
              "name": "msg",
              "type": "string"
            }
          ],
          "internalType": "struct Database.message[]",
          "name": "",
          "type": "tuple[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "friend_key",
          "type": "address"
        },
        {
          "internalType": "string",
          "name": "_msg",
          "type": "string"
        }
      ],
      "name": "sendMessage",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "transactionHash": "0x8746a372f9b8ad92731b698c3cb11c76204d1369c3dfabff97992a13f8110b79",
  "receipt": {
    "to": null,
    "from": "0xf39Fd6e51aad88F6F4ce6aB8827279cffFb92266",
    "contractAddress": "0x5FbDB2315678afecb367f032d93F642f64180aa3",
    "transactionIndex": 0,
    "gasUsed": "1625671",
    "logsBloom": "0x
    "blockHash": "0xb93d6de85db996fafbfa62127ee1ea263925a6c58f5048886100dc46d35f07ea",
    "transactionHash": "0x8746a372f9b8ad92731b698c3cb11c76204d1369c3dfabff97992a13f8110b79",
    "logs": [],
    "blockNumber": 1,
    "cumulativeGasUsed": "1625671",
    "status": 1,
    "byzantium": true
  },
  "args": [],
  "numDeployments": 1,
  "solcInputHash": "5e682e9121b246da824c8e38578ee14a",
  "metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"friend_key\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"}],\"name\":\"addFriend\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"pubkey\",\"type\":\"address\"}],\"name\":\"checkUserExists\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"}],\"name\":\"createAccount\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getMyFriendList\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"pubkey\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"}],\"internalType\":\"struct Database.friend[]\",\"name\":\"\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"pubkey\",\"type\":\"address\"}],\"name\":\"getUsername\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"friend_key\",\"type\":\"address\"}],\"name\":\"readMessage\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"msg\",\"type\":\"string\"}],\"internalType\":\"struct Database.message[]\",\"name\":\"\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"friend_key\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"_msg\",\"type\":\"string\"}],\"name\":\"sendMessage\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Database.sol\":\"Database\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/Database.sol\":{\"content\":\"// SPDX-License-Identifier: UNLICENSED\\npragma solidity ^0.8.9;\\n\\n// Uncomment this line to use console.log\\n// import \\\"hardhat/console.sol\\\";\\n\\ncontract Database {\\n\\n    // Stores the default name of an user and her friends info\\n    struct user {\\n        string name;\\n        friend[] friendList;\\n    }\\n\\n    // Each friend is identified by its address and name assigned by the second party\\n    struct friend {\\n        address pubkey;\\n        string name;\\n    }\\n\\n    // message construct stores the single chat message and its metadata\\n    struct message {\\n        address sender;\\n        uint256 timestamp;\\n        string msg;\\n    }\\n\\n    // Collection of users registered on the application\\n    mapping(address => user) userList;\\n    // Collection of messages communicated in a channel between two users\\n    mapping(bytes32 => message[]) allMessages; // key : Hash(user1,user2)\\n\\n    // It checks whether a user(identified by its public key)\\n    // has created an account on this application or not\\n    function checkUserExists(address pubkey) public view returns(bool) {\\n        return bytes(userList[pubkey].name).length > 0;\\n    }\\n\\n    // Registers the caller(msg.sender) to our app with a non-empty username\\n    function createAccount(string calldata name) external {\\n        require(checkUserExists(msg.sender)==false, \\\"User already exists!\\\");\\n        require(bytes(name).length>0, \\\"Username cannot be empty!\\\"); \\n        userList[msg.sender].name = name;\\n    }\\n\\n    // Returns the default name provided by an user\\n    function getUsername(address pubkey) external view returns(string memory) {\\n        require(checkUserExists(pubkey), \\\"User is not registered!\\\");\\n        return userList[pubkey].name;\\n    }\\n\\n    // Adds new user as your friend with an associated nickname\\n    function addFriend(address friend_key, string calldata name) external {\\n        require(checkUserExists(msg.sender), \\\"Create an account first!\\\");\\n        require(checkUserExists(friend_key), \\\"User is not registered!\\\");\\n        require(msg.sender!=friend_key, \\\"Users cannot add themselves as friends!\\\");\\n        require(checkAlreadyFriends(msg.sender,friend_key)==false, \\\"These users are already friends!\\\");\\n\\n        _addFriend(msg.sender, friend_key, name);\\n        _addFriend(friend_key, msg.sender, userList[msg.sender].name);\\n    }\\n\\n    // Checks if two users are already friends or not\\n    function checkAlreadyFriends(address pubkey1, address pubkey2) internal view returns(bool) {\\n\\n        if(userList[pubkey1].friendList.length > userList[pubkey2].friendList.length)\\n        {\\n            address tmp = pubkey1;\\n            pubkey1 = pubkey2;\\n            pubkey2 = tmp;\\n        }\\n\\n        for(uint i=0; i<userList[pubkey1].friendList.length; ++i)\\n        {\\n            if(userList[pubkey1].friendList[i].pubkey == pubkey2)\\n                return true;\\n        }\\n        return false;\\n    }\\n\\n    // A helper function to update the friendList\\n    function _addFriend(address me, address friend_key, string memory name) internal {\\n        friend memory newFriend = friend(friend_key,name);\\n        userList[me].friendList.push(newFriend);\\n    }\\n\\n    // Returns list of friends of the sender\\n    function getMyFriendList() external view returns(friend[] memory) {\\n        return userList[msg.sender].friendList;\\n    }\\n\\n    // Returns a unique code for the channel created between the two users\\n    // Hash(key1,key2) where key1 is lexicographically smaller than key2\\n    function _getChatCode(address pubkey1, address pubkey2) internal pure returns(bytes32) {\\n        if(pubkey1 < pubkey2)\\n            return keccak256(abi.encodePacked(pubkey1, pubkey2));\\n        else\\n            return keccak256(abi.encodePacked(pubkey2, pubkey1));\\n    }\\n\\n    // Sends a new message to a given friend\\n    function sendMessage(address friend_key, string calldata _msg) external {\\n        require(checkUserExists(msg.sender), \\\"Create an account first!\\\");\\n        require(checkUserExists(friend_key), \\\"User is not registered!\\\");\\n        require(checkAlreadyFriends(msg.sender,friend_key), \\\"You are not friends with the given user\\\");\\n\\n        bytes32 chatCode = _getChatCode(msg.sender, friend_key);\\n        message memory newMsg = message(msg.sender, block.timestamp, _msg);\\n        allMessages[chatCode].push(newMsg);\\n    }\\n\\n    // Returns all the chat messages communicated in a channel\\n    function readMessage(address friend_key) external view returns(message[] memory) {\\n        bytes32 chatCode = _getChatCode(msg.sender, friend_key);\\n        return allMessages[chatCode];\\n    }\\n}\",\"keccak256\":\"0x95bc7dd54a77762ea04f3c5b0b5572e5f5068ed6361e632a59cee0fa3a7cc61e\",\"license\":\"UNLICENSED\"}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b50611c8f806100206000396000f3fe608060405234801561001057600080fd5b506004361061007d5760003560e01c80633b9f708d1161005b5780633b9f708d146100fe578063bd0f4d0d1461011a578063ce43c03214610138578063de6f24bb146101685761007d565b8063133f50f514610082578063255e9c11146100b2578063298daf5b146100e2575b600080fd5b61009c60048036038101906100979190610f29565b610184565b6040516100a99190610f71565b60405180910390f35b6100cc60048036038101906100c79190610f29565b6101dd565b6040516100d99190611156565b60405180910390f35b6100fc60048036038101906100f791906111dd565b610350565b005b6101186004803603810190610113919061122a565b61043a565b005b6101226106b0565b60405161012f9190611389565b60405180910390f35b610152600480360381019061014d9190610f29565b610836565b60405161015f91906113f5565b60405180910390f35b610182600480360381019061017d919061122a565b610951565b005b6000806000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000180546101d390611446565b9050119050919050565b606060006101eb3384610b5e565b905060016000828152602001908152602001600020805480602002602001604051908101604052809291908181526020016000905b8282101561034457838290600052602060002090600302016040518060600160405290816000820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001600182015481526020016002820180546102b390611446565b80601f01602080910402602001604051908101604052809291908181526020018280546102df90611446565b801561032c5780601f106103015761010080835404028352916020019161032c565b820191906000526020600020905b81548152906001019060200180831161030f57829003601f168201915b50505050508152505081526020019060010190610220565b50505050915050919050565b6000151561035d33610184565b15151461039f576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610396906114c3565b60405180910390fd5b600082829050116103e5576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103dc9061152f565b60405180910390fd5b81816000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000019182610435929190611735565b505050565b61044333610184565b610482576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161047990611851565b60405180910390fd5b61048b83610184565b6104ca576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104c1906118bd565b60405180910390fd5b8273ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1603610538576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161052f9061194f565b60405180910390fd5b600015156105463385610bf6565b151514610588576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161057f906119bb565b60405180910390fd5b6105d7338484848080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f82011690508083019250505050505050610dc2565b6106ab83336000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600001805461062890611446565b80601f016020809104026020016040519081016040528092919081815260200182805461065490611446565b80156106a15780601f10610676576101008083540402835291602001916106a1565b820191906000526020600020905b81548152906001019060200180831161068457829003601f168201915b5050505050610dc2565b505050565b60606000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600101805480602002602001604051908101604052809291908181526020016000905b8282101561082d57838290600052602060002090600202016040518060400160405290816000820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200160018201805461079c90611446565b80601f01602080910402602001604051908101604052809291908181526020018280546107c890611446565b80156108155780601f106107ea57610100808354040283529160200191610815565b820191906000526020600020905b8154815290600101906020018083116107f857829003601f168201915b50505050508152505081526020019060010190610713565b50505050905090565b606061084182610184565b610880576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610877906118bd565b60405180910390fd5b6000808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000180546108cc90611446565b80601f01602080910402602001604051908101604052809291908181526020018280546108f890611446565b80156109455780601f1061091a57610100808354040283529160200191610945565b820191906000526020600020905b81548152906001019060200180831161092857829003601f168201915b50505050509050919050565b61095a33610184565b610999576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161099090611851565b60405180910390fd5b6109a283610184565b6109e1576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016109d8906118bd565b60405180910390fd5b6109eb3384610bf6565b610a2a576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a2190611a4d565b60405180910390fd5b6000610a363385610b5e565b9050600060405180606001604052803373ffffffffffffffffffffffffffffffffffffffff16815260200142815260200185858080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f8201169050808301925050505050505081525090506001600083815260200190815260200160002081908060018154018082558091505060019003906000526020600020906003020160009091909190915060008201518160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550602082015181600101556040820151816002019081610b549190611a6d565b5050505050505050565b60008173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161015610bc4578282604051602001610ba7929190611b87565b604051602081830303815290604052805190602001209050610bf0565b8183604051602001610bd7929190611b87565b6040516020818303038152906040528051906020012090505b92915050565b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600101805490506000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600101805490501115610c95576000839050829350809250505b60005b6000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060010180549050811015610db6578273ffffffffffffffffffffffffffffffffffffffff166000808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206001018281548110610d4e57610d4d611bb3565b5b906000526020600020906002020160000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1603610da5576001915050610dbc565b80610daf90611c11565b9050610c98565b50600090505b92915050565b600060405180604001604052808473ffffffffffffffffffffffffffffffffffffffff1681526020018381525090506000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060010181908060018154018082558091505060019003906000526020600020906002020160009091909190915060008201518160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506020820151816001019081610eb89190611a6d565b50505050505050565b600080fd5b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610ef682610ecb565b9050919050565b610f0681610eeb565b8114610f1157600080fd5b50565b600081359050610f2381610efd565b92915050565b600060208284031215610f3f57610f3e610ec1565b5b6000610f4d84828501610f14565b91505092915050565b60008115159050919050565b610f6b81610f56565b82525050565b6000602082019050610f866000830184610f62565b92915050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b610fc181610eeb565b82525050565b6000819050919050565b610fda81610fc7565b82525050565b600081519050919050565b600082825260208201905092915050565b60005b8381101561101a578082015181840152602081019050610fff565b60008484015250505050565b6000601f19601f8301169050919050565b600061104282610fe0565b61104c8185610feb565b935061105c818560208601610ffc565b61106581611026565b840191505092915050565b60006060830160008301516110886000860182610fb8565b50602083015161109b6020860182610fd1565b50604083015184820360408601526110b38282611037565b9150508091505092915050565b60006110cc8383611070565b905092915050565b6000602082019050919050565b60006110ec82610f8c565b6110f68185610f97565b93508360208202850161110885610fa8565b8060005b85811015611144578484038952815161112585826110c0565b9450611130836110d4565b925060208a0199505060018101905061110c565b50829750879550505050505092915050565b6000602082019050818103600083015261117081846110e1565b905092915050565b600080fd5b600080fd5b600080fd5b60008083601f84011261119d5761119c611178565b5b8235905067ffffffffffffffff8111156111ba576111b961117d565b5b6020830191508360018202830111156111d6576111d5611182565b5b9250929050565b600080602083850312156111f4576111f3610ec1565b5b600083013567ffffffffffffffff81111561121257611211610ec6565b5b61121e85828601611187565b92509250509250929050565b60008060006040848603121561124357611242610ec1565b5b600061125186828701610f14565b935050602084013567ffffffffffffffff81111561127257611271610ec6565b5b61127e86828701611187565b92509250509250925092565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b60006040830160008301516112ce6000860182610fb8565b50602083015184820360208601526112e68282611037565b9150508091505092915050565b60006112ff83836112b6565b905092915050565b6000602082019050919050565b600061131f8261128a565b6113298185611295565b93508360208202850161133b856112a6565b8060005b85811015611377578484038952815161135885826112f3565b945061136383611307565b925060208a0199505060018101905061133f565b50829750879550505050505092915050565b600060208201905081810360008301526113a38184611314565b905092915050565b600082825260208201905092915050565b60006113c782610fe0565b6113d181856113ab565b93506113e1818560208601610ffc565b6113ea81611026565b840191505092915050565b6000602082019050818103600083015261140f81846113bc565b905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b6000600282049050600182168061145e57607f821691505b60208210810361147157611470611417565b5b50919050565b7f5573657220616c72656164792065786973747321000000000000000000000000600082015250565b60006114ad6014836113ab565b91506114b882611477565b602082019050919050565b600060208201905081810360008301526114dc816114a0565b9050919050565b7f557365726e616d652063616e6e6f7420626520656d7074792100000000000000600082015250565b60006115196019836113ab565b9150611524826114e3565b602082019050919050565b600060208201905081810360008301526115488161150c565b9050919050565b600082905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b6000600883026115eb7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff826115ae565b6115f586836115ae565b95508019841693508086168417925050509392505050565b6000819050919050565b600061163261162d61162884610fc7565b61160d565b610fc7565b9050919050565b6000819050919050565b61164c83611617565b61166061165882611639565b8484546115bb565b825550505050565b600090565b611675611668565b611680818484611643565b505050565b5b818110156116a45761169960008261166d565b600181019050611686565b5050565b601f8211156116e9576116ba81611589565b6116c38461159e565b810160208510156116d2578190505b6116e66116de8561159e565b830182611685565b50505b505050565b600082821c905092915050565b600061170c600019846008026116ee565b1980831691505092915050565b600061172583836116fb565b9150826002028217905092915050565b61173f838361154f565b67ffffffffffffffff8111156117585761175761155a565b5b6117628254611446565b61176d8282856116a8565b6000601f83116001811461179c576000841561178a578287013590505b6117948582611719565b8655506117fc565b601f1984166117aa86611589565b60005b828110156117d2578489013582556001820191506020850194506020810190506117ad565b868310156117ef57848901356117eb601f8916826116fb565b8355505b6001600288020188555050505b50505050505050565b7f43726561746520616e206163636f756e74206669727374210000000000000000600082015250565b600061183b6018836113ab565b915061184682611805565b602082019050919050565b6000602082019050818103600083015261186a8161182e565b9050919050565b7f55736572206973206e6f74207265676973746572656421000000000000000000600082015250565b60006118a76017836113ab565b91506118b282611871565b602082019050919050565b600060208201905081810360008301526118d68161189a565b9050919050565b7f55736572732063616e6e6f7420616464207468656d73656c766573206173206660008201527f7269656e64732100000000000000000000000000000000000000000000000000602082015250565b60006119396027836113ab565b9150611944826118dd565b604082019050919050565b600060208201905081810360008301526119688161192c565b9050919050565b7f54686573652075736572732061726520616c726561647920667269656e647321600082015250565b60006119a56020836113ab565b91506119b08261196f565b602082019050919050565b600060208201905081810360008301526119d481611998565b9050919050565b7f596f7520617265206e6f7420667269656e64732077697468207468652067697660008201527f656e207573657200000000000000000000000000000000000000000000000000602082015250565b6000611a376027836113ab565b9150611a42826119db565b604082019050919050565b60006020820190508181036000830152611a6681611a2a565b9050919050565b611a7682610fe0565b67ffffffffffffffff811115611a8f57611a8e61155a565b5b611a998254611446565b611aa48282856116a8565b600060209050601f831160018114611ad75760008415611ac5578287015190505b611acf8582611719565b865550611b37565b601f198416611ae586611589565b60005b82811015611b0d57848901518255600182019150602085019450602081019050611ae8565b86831015611b2a5784890151611b26601f8916826116fb565b8355505b6001600288020188555050505b505050505050565b60008160601b9050919050565b6000611b5782611b3f565b9050919050565b6000611b6982611b4c565b9050919050565b611b81611b7c82610eeb565b611b5e565b82525050565b6000611b938285611b70565b601482019150611ba38284611b70565b6014820191508190509392505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000611c1c82610fc7565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8203611c4e57611c4d611be2565b5b60018201905091905056fea264697066735822122008883a40c231ada51bd36314628f6b7650f30729b5b86b0db4867a40102f74ca64736f6c63430008110033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b506004361061007d5760003560e01c80633b9f708d1161005b5780633b9f708d146100fe578063bd0f4d0d1461011a578063ce43c03214610138578063de6f24bb146101685761007d565b8063133f50f514610082578063255e9c11146100b2578063298daf5b146100e2575b600080fd5b61009c60048036038101906100979190610f29565b610184565b6040516100a99190610f71565b60405180910390f35b6100cc60048036038101906100c79190610f29565b6101dd565b6040516100d99190611156565b60405180910390f35b6100fc60048036038101906100f791906111dd565b610350565b005b6101186004803603810190610113919061122a565b61043a565b005b6101226106b0565b60405161012f9190611389565b60405180910390f35b610152600480360381019061014d9190610f29565b610836565b60405161015f91906113f5565b60405180910390f35b610182600480360381019061017d919061122a565b610951565b005b6000806000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000180546101d390611446565b9050119050919050565b606060006101eb3384610b5e565b905060016000828152602001908152602001600020805480602002602001604051908101604052809291908181526020016000905b8282101561034457838290600052602060002090600302016040518060600160405290816000820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001600182015481526020016002820180546102b390611446565b80601f01602080910402602001604051908101604052809291908181526020018280546102df90611446565b801561032c5780601f106103015761010080835404028352916020019161032c565b820191906000526020600020905b81548152906001019060200180831161030f57829003601f168201915b50505050508152505081526020019060010190610220565b50505050915050919050565b6000151561035d33610184565b15151461039f576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610396906114c3565b60405180910390fd5b600082829050116103e5576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103dc9061152f565b60405180910390fd5b81816000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000019182610435929190611735565b505050565b61044333610184565b610482576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161047990611851565b60405180910390fd5b61048b83610184565b6104ca576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104c1906118bd565b60405180910390fd5b8273ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1603610538576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161052f9061194f565b60405180910390fd5b600015156105463385610bf6565b151514610588576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161057f906119bb565b60405180910390fd5b6105d7338484848080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f82011690508083019250505050505050610dc2565b6106ab83336000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600001805461062890611446565b80601f016020809104026020016040519081016040528092919081815260200182805461065490611446565b80156106a15780601f10610676576101008083540402835291602001916106a1565b820191906000526020600020905b81548152906001019060200180831161068457829003601f168201915b5050505050610dc2565b505050565b60606000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600101805480602002602001604051908101604052809291908181526020016000905b8282101561082d57838290600052602060002090600202016040518060400160405290816000820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200160018201805461079c90611446565b80601f01602080910402602001604051908101604052809291908181526020018280546107c890611446565b80156108155780601f106107ea57610100808354040283529160200191610815565b820191906000526020600020905b8154815290600101906020018083116107f857829003601f168201915b50505050508152505081526020019060010190610713565b50505050905090565b606061084182610184565b610880576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610877906118bd565b60405180910390fd5b6000808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000180546108cc90611446565b80601f01602080910402602001604051908101604052809291908181526020018280546108f890611446565b80156109455780601f1061091a57610100808354040283529160200191610945565b820191906000526020600020905b81548152906001019060200180831161092857829003601f168201915b50505050509050919050565b61095a33610184565b610999576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161099090611851565b60405180910390fd5b6109a283610184565b6109e1576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016109d8906118bd565b60405180910390fd5b6109eb3384610bf6565b610a2a576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a2190611a4d565b60405180910390fd5b6000610a363385610b5e565b9050600060405180606001604052803373ffffffffffffffffffffffffffffffffffffffff16815260200142815260200185858080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f8201169050808301925050505050505081525090506001600083815260200190815260200160002081908060018154018082558091505060019003906000526020600020906003020160009091909190915060008201518160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550602082015181600101556040820151816002019081610b549190611a6d565b5050505050505050565b60008173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161015610bc4578282604051602001610ba7929190611b87565b604051602081830303815290604052805190602001209050610bf0565b8183604051602001610bd7929190611b87565b6040516020818303038152906040528051906020012090505b92915050565b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600101805490506000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600101805490501115610c95576000839050829350809250505b60005b6000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060010180549050811015610db6578273ffffffffffffffffffffffffffffffffffffffff166000808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206001018281548110610d4e57610d4d611bb3565b5b906000526020600020906002020160000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1603610da5576001915050610dbc565b80610daf90611c11565b9050610c98565b50600090505b92915050565b600060405180604001604052808473ffffffffffffffffffffffffffffffffffffffff1681526020018381525090506000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060010181908060018154018082558091505060019003906000526020600020906002020160009091909190915060008201518160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506020820151816001019081610eb89190611a6d565b50505050505050565b600080fd5b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610ef682610ecb565b9050919050565b610f0681610eeb565b8114610f1157600080fd5b50565b600081359050610f2381610efd565b92915050565b600060208284031215610f3f57610f3e610ec1565b5b6000610f4d84828501610f14565b91505092915050565b60008115159050919050565b610f6b81610f56565b82525050565b6000602082019050610f866000830184610f62565b92915050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b610fc181610eeb565b82525050565b6000819050919050565b610fda81610fc7565b82525050565b600081519050919050565b600082825260208201905092915050565b60005b8381101561101a578082015181840152602081019050610fff565b60008484015250505050565b6000601f19601f8301169050919050565b600061104282610fe0565b61104c8185610feb565b935061105c818560208601610ffc565b61106581611026565b840191505092915050565b60006060830160008301516110886000860182610fb8565b50602083015161109b6020860182610fd1565b50604083015184820360408601526110b38282611037565b9150508091505092915050565b60006110cc8383611070565b905092915050565b6000602082019050919050565b60006110ec82610f8c565b6110f68185610f97565b93508360208202850161110885610fa8565b8060005b85811015611144578484038952815161112585826110c0565b9450611130836110d4565b925060208a0199505060018101905061110c565b50829750879550505050505092915050565b6000602082019050818103600083015261117081846110e1565b905092915050565b600080fd5b600080fd5b600080fd5b60008083601f84011261119d5761119c611178565b5b8235905067ffffffffffffffff8111156111ba576111b961117d565b5b6020830191508360018202830111156111d6576111d5611182565b5b9250929050565b600080602083850312156111f4576111f3610ec1565b5b600083013567ffffffffffffffff81111561121257611211610ec6565b5b61121e85828601611187565b92509250509250929050565b60008060006040848603121561124357611242610ec1565b5b600061125186828701610f14565b935050602084013567ffffffffffffffff81111561127257611271610ec6565b5b61127e86828701611187565b92509250509250925092565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b60006040830160008301516112ce6000860182610fb8565b50602083015184820360208601526112e68282611037565b9150508091505092915050565b60006112ff83836112b6565b905092915050565b6000602082019050919050565b600061131f8261128a565b6113298185611295565b93508360208202850161133b856112a6565b8060005b85811015611377578484038952815161135885826112f3565b945061136383611307565b925060208a0199505060018101905061133f565b50829750879550505050505092915050565b600060208201905081810360008301526113a38184611314565b905092915050565b600082825260208201905092915050565b60006113c782610fe0565b6113d181856113ab565b93506113e1818560208601610ffc565b6113ea81611026565b840191505092915050565b6000602082019050818103600083015261140f81846113bc565b905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b6000600282049050600182168061145e57607f821691505b60208210810361147157611470611417565b5b50919050565b7f5573657220616c72656164792065786973747321000000000000000000000000600082015250565b60006114ad6014836113ab565b91506114b882611477565b602082019050919050565b600060208201905081810360008301526114dc816114a0565b9050919050565b7f557365726e616d652063616e6e6f7420626520656d7074792100000000000000600082015250565b60006115196019836113ab565b9150611524826114e3565b602082019050919050565b600060208201905081810360008301526115488161150c565b9050919050565b600082905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b6000600883026115eb7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff826115ae565b6115f586836115ae565b95508019841693508086168417925050509392505050565b6000819050919050565b600061163261162d61162884610fc7565b61160d565b610fc7565b9050919050565b6000819050919050565b61164c83611617565b61166061165882611639565b8484546115bb565b825550505050565b600090565b611675611668565b611680818484611643565b505050565b5b818110156116a45761169960008261166d565b600181019050611686565b5050565b601f8211156116e9576116ba81611589565b6116c38461159e565b810160208510156116d2578190505b6116e66116de8561159e565b830182611685565b50505b505050565b600082821c905092915050565b600061170c600019846008026116ee565b1980831691505092915050565b600061172583836116fb565b9150826002028217905092915050565b61173f838361154f565b67ffffffffffffffff8111156117585761175761155a565b5b6117628254611446565b61176d8282856116a8565b6000601f83116001811461179c576000841561178a578287013590505b6117948582611719565b8655506117fc565b601f1984166117aa86611589565b60005b828110156117d2578489013582556001820191506020850194506020810190506117ad565b868310156117ef57848901356117eb601f8916826116fb565b8355505b6001600288020188555050505b50505050505050565b7f43726561746520616e206163636f756e74206669727374210000000000000000600082015250565b600061183b6018836113ab565b915061184682611805565b602082019050919050565b6000602082019050818103600083015261186a8161182e565b9050919050565b7f55736572206973206e6f74207265676973746572656421000000000000000000600082015250565b60006118a76017836113ab565b91506118b282611871565b602082019050919050565b600060208201905081810360008301526118d68161189a565b9050919050565b7f55736572732063616e6e6f7420616464207468656d73656c766573206173206660008201527f7269656e64732100000000000000000000000000000000000000000000000000602082015250565b60006119396027836113ab565b9150611944826118dd565b604082019050919050565b600060208201905081810360008301526119688161192c565b9050919050565b7f54686573652075736572732061726520616c726561647920667269656e647321600082015250565b60006119a56020836113ab565b91506119b08261196f565b602082019050919050565b600060208201905081810360008301526119d481611998565b9050919050565b7f596f7520617265206e6f7420667269656e64732077697468207468652067697660008201527f656e207573657200000000000000000000000000000000000000000000000000602082015250565b6000611a376027836113ab565b9150611a42826119db565b604082019050919050565b60006020820190508181036000830152611a6681611a2a565b9050919050565b611a7682610fe0565b67ffffffffffffffff811115611a8f57611a8e61155a565b5b611a998254611446565b611aa48282856116a8565b600060209050601f831160018114611ad75760008415611ac5578287015190505b611acf8582611719565b865550611b37565b601f198416611ae586611589565b60005b82811015611b0d57848901518255600182019150602085019450602081019050611ae8565b86831015611b2a5784890151611b26601f8916826116fb565b8355505b6001600288020188555050505b505050505050565b60008160601b9050919050565b6000611b5782611b3f565b9050919050565b6000611b6982611b4c565b9050919050565b611b81611b7c82610eeb565b611b5e565b82525050565b6000611b938285611b70565b601482019150611ba38284611b70565b6014820191508190509392505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000611c1c82610fc7565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8203611c4e57611c4d611be2565b5b60018201905091905056fea264697066735822122008883a40c231ada51bd36314628f6b7650f30729b5b86b0db4867a40102f74ca64736f6c63430008110033",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 25,
        "contract": "contracts/Database.sol:Database",
        "label": "userList",
        "offset": 0,
        "slot": "0",
        "type": "t_mapping(t_address,t_struct(user)8_storage)"
      },
      {
        "astId": 31,
        "contract": "contracts/Database.sol:Database",
        "label": "allMessages",
        "offset": 0,
        "slot": "1",
        "type": "t_mapping(t_bytes32,t_array(t_struct(message)20_storage)dyn_storage)"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_array(t_struct(friend)13_storage)dyn_storage": {
        "base": "t_struct(friend)13_storage",
        "encoding": "dynamic_array",
        "label": "struct Database.friend[]",
        "numberOfBytes": "32"
      },
      "t_array(t_struct(message)20_storage)dyn_storage": {
        "base": "t_struct(message)20_storage",
        "encoding": "dynamic_array",
        "label": "struct Database.message[]",
        "numberOfBytes": "32"
      },
      "t_bytes32": {
        "encoding": "inplace",
        "label": "bytes32",
        "numberOfBytes": "32"
      },
      "t_mapping(t_address,t_struct(user)8_storage)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => struct Database.user)",
        "numberOfBytes": "32",
        "value": "t_struct(user)8_storage"
      },
      "t_mapping(t_bytes32,t_array(t_struct(message)20_storage)dyn_storage)": {
        "encoding": "mapping",
        "key": "t_bytes32",
        "label": "mapping(bytes32 => struct Database.message[])",
        "numberOfBytes": "32",
        "value": "t_array(t_struct(message)20_storage)dyn_storage"
      },
      "t_string_storage": {
        "encoding": "bytes",
        "label": "string",
        "numberOfBytes": "32"
      },
      "t_struct(friend)13_storage": {
        "encoding": "inplace",
        "label": "struct Database.friend",
        "members": [
          {
            "astId": 10,
            "contract": "contracts/Database.sol:Database",
            "label": "pubkey",
            "offset": 0,
            "slot": "0",
            "type": "t_address"
          },
          {
            "astId": 12,
            "contract": "contracts/Database.sol:Database",
            "label": "name",
            "offset": 0,
            "slot": "1",
            "type": "t_string_storage"
          }
        ],
        "numberOfBytes": "64"
      },
      "t_struct(message)20_storage": {
        "encoding": "inplace",
        "label": "struct Database.message",
        "members": [
          {
            "astId": 15,
            "contract": "contracts/Database.sol:Database",
            "label": "sender",
            "offset": 0,
            "slot": "0",
            "type": "t_address"
          },
          {
            "astId": 17,
            "contract": "contracts/Database.sol:Database",
            "label": "timestamp",
            "offset": 0,
            "slot": "1",
            "type": "t_uint256"
          },
          {
            "astId": 19,
            "contract": "contracts/Database.sol:Database",
            "label": "msg",
            "offset": 0,
            "slot": "2",
            "type": "t_string_storage"
          }
        ],
        "numberOfBytes": "96"
      },
      "t_struct(user)8_storage": {
        "encoding": "inplace",
        "label": "struct Database.user",
        "members": [
          {
            "astId": 3,
            "contract": "contracts/Database.sol:Database",
            "label": "name",
            "offset": 0,
            "slot": "0",
            "type": "t_string_storage"
          },
          {
            "astId": 7,
            "contract": "contracts/Database.sol:Database",
            "label": "friendList",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_struct(friend)13_storage)dyn_storage"
          }
        ],
        "numberOfBytes": "64"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}